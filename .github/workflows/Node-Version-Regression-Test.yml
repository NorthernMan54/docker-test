name: Regression Ubuntu Node Version Updates(update-node)
run-name: Regression Ubuntu against ${{ github.event.inputs.tag }}

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release/Branch/Tag'
        default: '4.50.6'
        required: true

jobs:
  build:
    name: ${{ matrix.os }}, ${{ matrix.node-version }} --> ${{ matrix.UpdateNodeTo }}
    strategy:
      fail-fast: false
      matrix:
        #        os: [ubuntu-latest, ubuntu-20.04, macos-latest, macos-11, macos-13, windows-latest, windows-2019]
        os: [ubuntu-latest, ubuntu-20.04]

        #       node-version: [16.x]
        #       UpdateNodeTo: [18]
        #       pluginUpdate: [4.51.0]
        node-version: [16.x, 17.x, 18.x, 19.x, 20.x, 21.x]
        UpdateNodeTo: [16, 17, 18, 19, 20, 21]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
        name: Checkout ${{ github.repository }}@${{ github.event.inputs.tag }}
        with:
          ref: ${{ github.event.inputs.tag }}

      - uses: actions/setup-node@v3
        name: Setup NodeJS ${{ matrix.node-version }}
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - run: |
          node -v
          which node
          sudo node -v
          sudo which node

      - if: runner.os == 'Linux'
        name: Replace global node with installed version ( Linux )
        run: |
          installedNode=$(which node)
          echo $installedNode
          sudo rm /usr/local/bin/node
          mv $installedNode /usr/local/bin/node
          ls -l /usr/local/bin | grep node

      - run: |
          node -v
          which node
          sudo node -v
          sudo which node

      - run: npm ci
      - run: npm run build:server
      - run: npm run lint:server
      - run: npm run test

      # remove dev deps
      - run: npm clean-install --production

      # test hb-service
      - run: node dist/bin/hb-service.js -v

      - if: runner.os == 'Linux'
        name: 'Run hb-service install (Linux)'
        run: |
          sudo npm link
          sudo npm install -g homebridge
          sudo hb-service install --user homebridge --group `id -gn`
          sleep 30

      - if: runner.os == 'macOS'
        name: 'Run hb-service install (macOS)'
        run: |
          sudo npm link
          sudo npm install -g homebridge
          sudo hb-service install
          sleep 30

      - if: runner.os == 'Windows'
        name: 'Run hb-service install (Windows)'
        run: |
          npm link
          npm install -g homebridge
          hb-service install
          Start-Sleep -s 30

      - name: 'Test hb-service install'
        run: node dist/bin/hb-service.js status --port 8581

      - if: runner.os == 'Linux'
        name: 'Test hb-service update-node ${{ matrix.UpdateNodeTo }} (Linux)'
        run: |
          sudo node dist/bin/hb-service.js update-node ${{ matrix.UpdateNodeTo }}
          sleep 30
          node dist/bin/hb-service.js status --port 8581

      #      - run: |
      #          find / -type d | grep dist

      #      - if: runner.os == 'Linux'
      # /opt/homebridge/lib/node_modules/homebridge-config-ui-x/upgrade-install.sh 4.51.1 /opt/homebridge
      # npm install -g homebridge-config-ui-x@4.51.2-test.4
      # sudo -E -n npm run upgrade-install -- 4.51.1 /usr
      # sudo -E -n npm install -g homebridge-config-ui-x@4.51.2-test.4
      #        name: 'Test hb-service add ${{ matrix.pluginUpdate }} (Linux)'
      #        run: |
      # sudo node dist/bin/hb-service.js add ${{ matrix.pluginUpdate }}
      #          sudo -E -n npm run upgrade-install -- ${{ matrix.pluginUpdate }} /usr/local
      #          sudo node dist/bin/hb-service.js restart
      #          sleep 30
      #          node dist/bin/hb-service.js status --port 8581

      - name: 'View homebridge log'
        run: |
          node dist/bin/hb-service.js view

      - name: 'View Errors'
        if: ${{ failure() }}
        run: |
          node dist/bin/hb-service.js view
          exit 1
